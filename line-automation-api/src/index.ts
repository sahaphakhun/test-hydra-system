import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import mongoose from 'mongoose';
import { createServer } from 'http';
import { WebSocketServer } from 'ws';
import { registerRoutes } from './routes';
import { setupWebSocketHandlers } from './websocket';
import adminRoutes from './routes/adminRoutes';

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å .env
dotenv.config();

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
const PORT = process.env.PORT || 3000;
const MONGO_URL = process.env.MONGO_URL || 'mongodb://localhost:27017/line-automation';

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Express app
const app = express();

// middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// ‡∏™‡∏£‡πâ‡∏≤‡∏á HTTP server ‡∏à‡∏≤‡∏Å Express app
const server = createServer(app);

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö MongoDB
mongoose.connect(MONGO_URL)
  .then(() => {
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö MongoDB ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
  })
  .catch((error) => {
    console.error('‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö MongoDB ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
    process.exit(1);
  });

// ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô routes
registerRoutes(app);
app.use('/', adminRoutes);

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ WebSocket
const wss = new WebSocketServer({ server });
setupWebSocketHandlers(wss);

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô server
server.listen(PORT, () => {
  console.log(`üöÄ Server ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà http://localhost:${PORT}`);
});

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏á‡πà‡∏≤‡∏á‡∏≤‡∏°
process.on('SIGINT', () => {
  console.log('üëã ‡∏õ‡∏¥‡∏î server');
  mongoose.connection.close()
    .then(() => {
      console.log('‚úÖ ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
      process.exit(1);
    });
}); 
